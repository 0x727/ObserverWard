name: Rust

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          default: true
          override: true
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Build
        run: |
          sudo apt-get install upx-ucl -y
          sudo apt-get install musl-tools -y
          sudo apt-get install pkg-config libssl-dev -y
          cargo build --target=x86_64-unknown-linux-musl --release
          strip target/x86_64-unknown-linux-musl/release/observer_ward
          upx --best --lzma target/x86_64-unknown-linux-musl/release/observer_ward
          mv target/x86_64-unknown-linux-musl/release/observer_ward target/x86_64-unknown-linux-musl/release/observer_ward_amd64

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-unknown-linux-musl/release/observer_ward_amd64
          asset_name: observer_ward_amd64
          tag: default
          overwrite: true

  build-win:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: i686-pc-windows-msvc
          default: true
          override: true
      - name: Set up the Windows environment
        shell: bash
        run: |
          choco install llvm openssl upx
          echo "OPENSSL_DIR=C:\Program Files\OpenSSL-Win64" >>$GITHUB_ENV
          echo "RUSTFLAGS=-C target-feature=+crt-static" >>$GITHUB_ENV
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: build rust release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target=i686-pc-windows-msvc --release
      - name: Upx the Windows binary
        shell: bash
        run: |
          upx -9 target/i686-pc-windows-msvc/release/observer_ward.exe
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/i686-pc-windows-msvc/release/observer_ward.exe
          asset_name: observer_ward.exe
          tag: default
          overwrite: true

  build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
          override: true
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Build for mac
        run: |
          cargo build --target=x86_64-apple-darwin --release
          strip target/x86_64-apple-darwin/release/observer_ward
          mv target/x86_64-apple-darwin/release/observer_ward target/x86_64-apple-darwin/release/observer_ward_darwin
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-apple-darwin/release/observer_ward_darwin
          asset_name: observer_ward_darwin
          tag: default
          overwrite: true
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          default: true
          override: true
      - name: Build for mac M1
        run: |
          cargo build --target=aarch64-apple-darwin --release
          strip target/aarch64-apple-darwin/release/observer_ward
          mv target/aarch64-apple-darwin/release/observer_ward target/aarch64-apple-darwin/release/observer_ward_m1_darwin
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-apple-darwin/release/observer_ward_m1_darwin
          asset_name: observer_ward_m1_darwin
          tag: default
          overwrite: true